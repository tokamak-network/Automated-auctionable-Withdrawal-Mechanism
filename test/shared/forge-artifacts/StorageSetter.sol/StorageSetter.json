{"abi":[{"type":"function","name":"getAddress","inputs":[{"name":"_slot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"addr_","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getBool","inputs":[{"name":"_slot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"value_","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"getBytes32","inputs":[{"name":"_slot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"value_","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"getUint","inputs":[{"name":"_slot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"value_","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"setAddress","inputs":[{"name":"_slot","type":"bytes32","internalType":"bytes32"},{"name":"_address","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setBool","inputs":[{"name":"_slot","type":"bytes32","internalType":"bytes32"},{"name":"_value","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setBytes32","inputs":[{"name":"slots","type":"tuple[]","internalType":"struct StorageSetter.Slot[]","components":[{"name":"key","type":"bytes32","internalType":"bytes32"},{"name":"value","type":"bytes32","internalType":"bytes32"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setBytes32","inputs":[{"name":"_slot","type":"bytes32","internalType":"bytes32"},{"name":"_value","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setUint","inputs":[{"name":"_slot","type":"bytes32","internalType":"bytes32"},{"name":"_value","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"version","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"}],"bytecode":{"object":"0x608060405234801561001057600080fd5b5061046a806100206000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c8063a6ed563e11610076578063bd02d0f51161005b578063bd02d0f51461018e578063ca446dd9146101b8578063e2a4853a1461011557600080fd5b8063a6ed563e1461018e578063abfdcced146101aa57600080fd5b80634e91db08116100a75780634e91db081461011557806354fd4d50146101275780637ae1cfca1461017057600080fd5b80630528afe2146100c357806321f8a721146100d8575b600080fd5b6100d66100d1366004610239565b6101c6565b005b6100eb6100e63660046102ae565b610229565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100d66101233660046102c7565b9055565b6101636040518060400160405280600581526020017f312e322e3000000000000000000000000000000000000000000000000000000081525081565b60405161010c91906102e9565b61017e6100e63660046102ae565b604051901515815260200161010c565b61019c6100e63660046102ae565b60405190815260200161010c565b6100d661012336600461035c565b6100d6610123366004610391565b8060005b81811015610223576102118484838181106101e7576101e76103cf565b90506040020160000135858584818110610203576102036103cf565b905060400201602001359055565b8061021b816103fe565b9150506101ca565b50505050565b6000610233825490565b92915050565b6000806020838503121561024c57600080fd5b823567ffffffffffffffff8082111561026457600080fd5b818501915085601f83011261027857600080fd5b81358181111561028757600080fd5b8660208260061b850101111561029c57600080fd5b60209290920196919550909350505050565b6000602082840312156102c057600080fd5b5035919050565b600080604083850312156102da57600080fd5b50508035926020909101359150565b600060208083528351808285015260005b81811015610316578581018301518582016040015282016102fa565b81811115610328576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b6000806040838503121561036f57600080fd5b823591506020830135801515811461038657600080fd5b809150509250929050565b600080604083850312156103a457600080fd5b82359150602083013573ffffffffffffffffffffffffffffffffffffffff8116811461038657600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610456577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea164736f6c634300080f000a","sourceMap":"416:2030:179:-:0;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x608060405234801561001057600080fd5b50600436106100be5760003560e01c8063a6ed563e11610076578063bd02d0f51161005b578063bd02d0f51461018e578063ca446dd9146101b8578063e2a4853a1461011557600080fd5b8063a6ed563e1461018e578063abfdcced146101aa57600080fd5b80634e91db08116100a75780634e91db081461011557806354fd4d50146101275780637ae1cfca1461017057600080fd5b80630528afe2146100c357806321f8a721146100d8575b600080fd5b6100d66100d1366004610239565b6101c6565b005b6100eb6100e63660046102ae565b610229565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100d66101233660046102c7565b9055565b6101636040518060400160405280600581526020017f312e322e3000000000000000000000000000000000000000000000000000000081525081565b60405161010c91906102e9565b61017e6100e63660046102ae565b604051901515815260200161010c565b61019c6100e63660046102ae565b60405190815260200161010c565b6100d661012336600461035c565b6100d6610123366004610391565b8060005b81811015610223576102118484838181106101e7576101e76103cf565b90506040020160000135858584818110610203576102036103cf565b905060400201602001359055565b8061021b816103fe565b9150506101ca565b50505050565b6000610233825490565b92915050565b6000806020838503121561024c57600080fd5b823567ffffffffffffffff8082111561026457600080fd5b818501915085601f83011261027857600080fd5b81358181111561028757600080fd5b8660208260061b850101111561029c57600080fd5b60209290920196919550909350505050565b6000602082840312156102c057600080fd5b5035919050565b600080604083850312156102da57600080fd5b50508035926020909101359150565b600060208083528351808285015260005b81811015610316578581018301518582016040015282016102fa565b81811115610328576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b6000806040838503121561036f57600080fd5b823591506020830135801515811461038657600080fd5b809150509250929050565b600080604083850312156103a457600080fd5b82359150602083013573ffffffffffffffffffffffffffffffffffffffff8116811461038657600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610456577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea164736f6c634300080f000a","sourceMap":"416:2030:179:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1013:211;;;;;;:::i;:::-;;:::i;:::-;;1990:123;;;;;;:::i;:::-;;:::i;:::-;;;1020:42:251;1008:55;;;990:74;;978:2;963:18;1990:123:179;;;;;;;;835:108;;;;;;:::i;:::-;2703:21:160;;835:108:179;646:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2328:116::-;;;;;;:::i;:::-;;;2154:14:251;;2147:22;2129:41;;2117:2;2102:18;2328:116:179;1989:187:251;1286:125:179;;;;;;:::i;:::-;;;2327:25:251;;;2315:2;2300:18;1286:125:179;2181:177:251;2170:99:179;;;;;;:::i;1815:112::-;;;;;;:::i;1013:211::-;1090:5;1073:14;1112:106;1132:6;1128:1;:10;1112:106;;;1159:48;1178:5;;1184:1;1178:8;;;;;;;:::i;:::-;;;;;;:12;;;1192:5;;1198:1;1192:8;;;;;;;:::i;:::-;;;;;;:14;;;2703:21:160;;2610:130;1159:48:179;1140:3;;;;:::i;:::-;;;;1112:106;;;;1063:161;1013:211;;:::o;1990:123::-;2048:13;2081:25;2100:5;535:12:160;;420:143;2081:25:179;2073:33;1990:123;-1:-1:-1;;1990:123:179:o;14:640:251:-;125:6;133;186:2;174:9;165:7;161:23;157:32;154:52;;;202:1;199;192:12;154:52;242:9;229:23;271:18;312:2;304:6;301:14;298:34;;;328:1;325;318:12;298:34;366:6;355:9;351:22;341:32;;411:7;404:4;400:2;396:13;392:27;382:55;;433:1;430;423:12;382:55;473:2;460:16;499:2;491:6;488:14;485:34;;;515:1;512;505:12;485:34;568:7;563:2;553:6;550:1;546:14;542:2;538:23;534:32;531:45;528:65;;;589:1;586;579:12;528:65;620:2;612:11;;;;;642:6;;-1:-1:-1;14:640:251;;-1:-1:-1;;;;14:640:251:o;659:180::-;718:6;771:2;759:9;750:7;746:23;742:32;739:52;;;787:1;784;777:12;739:52;-1:-1:-1;810:23:251;;659:180;-1:-1:-1;659:180:251:o;1075:248::-;1143:6;1151;1204:2;1192:9;1183:7;1179:23;1175:32;1172:52;;;1220:1;1217;1210:12;1172:52;-1:-1:-1;;1243:23:251;;;1313:2;1298:18;;;1285:32;;-1:-1:-1;1075:248:251:o;1328:656::-;1440:4;1469:2;1498;1487:9;1480:21;1530:6;1524:13;1573:6;1568:2;1557:9;1553:18;1546:34;1598:1;1608:140;1622:6;1619:1;1616:13;1608:140;;;1717:14;;;1713:23;;1707:30;1683:17;;;1702:2;1679:26;1672:66;1637:10;;1608:140;;;1766:6;1763:1;1760:13;1757:91;;;1836:1;1831:2;1822:6;1811:9;1807:22;1803:31;1796:42;1757:91;-1:-1:-1;1900:2:251;1888:15;1905:66;1884:88;1869:104;;;;1975:2;1865:113;;1328:656;-1:-1:-1;;;1328:656:251:o;2363:341::-;2428:6;2436;2489:2;2477:9;2468:7;2464:23;2460:32;2457:52;;;2505:1;2502;2495:12;2457:52;2541:9;2528:23;2518:33;;2601:2;2590:9;2586:18;2573:32;2648:5;2641:13;2634:21;2627:5;2624:32;2614:60;;2670:1;2667;2660:12;2614:60;2693:5;2683:15;;;2363:341;;;;;:::o;2891:377::-;2959:6;2967;3020:2;3008:9;2999:7;2995:23;2991:32;2988:52;;;3036:1;3033;3026:12;2988:52;3072:9;3059:23;3049:33;;3132:2;3121:9;3117:18;3104:32;3176:42;3169:5;3165:54;3158:5;3155:65;3145:93;;3234:1;3231;3224:12;3526:184;3578:77;3575:1;3568:88;3675:4;3672:1;3665:15;3699:4;3696:1;3689:15;3715:349;3754:3;3785:66;3778:5;3775:77;3772:257;;3885:77;3882:1;3875:88;3986:4;3983:1;3976:15;4014:4;4011:1;4004:15;3772:257;-1:-1:-1;4056:1:251;4045:13;;3715:349::o","linkReferences":{}},"methodIdentifiers":{"getAddress(bytes32)":"21f8a721","getBool(bytes32)":"7ae1cfca","getBytes32(bytes32)":"a6ed563e","getUint(bytes32)":"bd02d0f5","setAddress(bytes32,address)":"ca446dd9","setBool(bytes32,bool)":"abfdcced","setBytes32((bytes32,bytes32)[])":"0528afe2","setBytes32(bytes32,bytes32)":"4e91db08","setUint(bytes32,uint256)":"e2a4853a","version()":"54fd4d50"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_slot\",\"type\":\"bytes32\"}],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"addr_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_slot\",\"type\":\"bytes32\"}],\"name\":\"getBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value_\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_slot\",\"type\":\"bytes32\"}],\"name\":\"getBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value_\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_slot\",\"type\":\"bytes32\"}],\"name\":\"getUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_slot\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_slot\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"_value\",\"type\":\"bool\"}],\"name\":\"setBool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"internalType\":\"struct StorageSetter.Slot[]\",\"name\":\"slots\",\"type\":\"tuple[]\"}],\"name\":\"setBytes32\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_slot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_value\",\"type\":\"bytes32\"}],\"name\":\"setBytes32\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_slot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setUint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"version\":{\"custom:semver\":\"1.2.0\"}},\"title\":\"StorageSetter\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getAddress(bytes32)\":{\"notice\":\"Retrieves an address value from `_slot`.\"},\"getBool(bytes32)\":{\"notice\":\"Retrieves a bool value from `_slot`.\"},\"getBytes32(bytes32)\":{\"notice\":\"Retrieves a bytes32 value from `_slot`.\"},\"getUint(bytes32)\":{\"notice\":\"Retrieves a uint256 value from `_slot`.\"},\"setAddress(bytes32,address)\":{\"notice\":\"Stores an address `_value` at `_slot`.\"},\"setBool(bytes32,bool)\":{\"notice\":\"Stores a bool `_value` at `_slot`.\"},\"setBytes32((bytes32,bytes32)[])\":{\"notice\":\"Stores a bytes32 value at each key in `_slots`.\"},\"setBytes32(bytes32,bytes32)\":{\"notice\":\"Stores a bytes32 `_value` at `_slot`. Any storage slots that         are packed should be set through this interface.\"},\"setUint(bytes32,uint256)\":{\"notice\":\"Stores a uint256 `_value` at `_slot`.\"},\"version()\":{\"notice\":\"Semantic version.\"}},\"notice\":\"A simple contract that allows setting arbitrary storage slots.         WARNING: this contract is not safe to be called by untrusted parties.         It is only meant as an intermediate step during upgrades.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/universal/StorageSetter.sol\":\"StorageSetter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@cwia/=lib/clones-with-immutable-args/src/\",\":@lib-keccak/=lib/lib-keccak/contracts/lib/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/solmate/\",\":@solady-test/=lib/lib-keccak/lib/solady/test/\",\":@solady/=lib/lib-keccak/lib/solady/src/\",\":clones-with-immutable-args/=lib/clones-with-immutable-args/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":kontrol-cheatcodes/=lib/kontrol-cheatcodes/src/\",\":lib-keccak/=lib/lib-keccak/contracts/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":solady/=lib/solady/src/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"src/libraries/Storage.sol\":{\"keccak256\":\"0x7ce27a05552aa69afa6b2ab6684dfe99f27366cf8ef2046baeb1fb62fff0022f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6a24f3ed56681720707a5ab0372fd67fcb1a4f6fb072c7140cda28bdb70f269\",\"dweb:/ipfs/QmW9uTpUULV4xmP7A7MoBDeDhVfQgmJG5qVUFGtXxWpWWK\"]},\"src/universal/ISemver.sol\":{\"keccak256\":\"0xba34562a8026f59886d2e07d1d58d90b9691d00e0788c6263cef6c22740cab44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0826f998632f83c103c3085bf2e872db79a69022b6d2e0444c83a64ca5283c2a\",\"dweb:/ipfs/QmcJ7PNqkAfKqbjFGRordtAg1v9DvcBSKvdTkVvciLyvQR\"]},\"src/universal/StorageSetter.sol\":{\"keccak256\":\"0x6fd8feff6ed9a3a20ed599c2b838b79f424f66ad2f3b618f4d1aebf9a867491b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0df55fd09a8a9cf4e55e188fff90d623606898c123b8e21d809f206c2328455f\",\"dweb:/ipfs/QmZWzbfkUYAxfN5eRtEpPjr6WcK86ZjsiJ8PVm7bULByPu\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.15+commit.e14f2714"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"bytes32","name":"_slot","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getAddress","outputs":[{"internalType":"address","name":"addr_","type":"address"}]},{"inputs":[{"internalType":"bytes32","name":"_slot","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getBool","outputs":[{"internalType":"bool","name":"value_","type":"bool"}]},{"inputs":[{"internalType":"bytes32","name":"_slot","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getBytes32","outputs":[{"internalType":"bytes32","name":"value_","type":"bytes32"}]},{"inputs":[{"internalType":"bytes32","name":"_slot","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getUint","outputs":[{"internalType":"uint256","name":"value_","type":"uint256"}]},{"inputs":[{"internalType":"bytes32","name":"_slot","type":"bytes32"},{"internalType":"address","name":"_address","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setAddress"},{"inputs":[{"internalType":"bytes32","name":"_slot","type":"bytes32"},{"internalType":"bool","name":"_value","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"setBool"},{"inputs":[{"internalType":"struct StorageSetter.Slot[]","name":"slots","type":"tuple[]","components":[{"internalType":"bytes32","name":"key","type":"bytes32"},{"internalType":"bytes32","name":"value","type":"bytes32"}]}],"stateMutability":"nonpayable","type":"function","name":"setBytes32"},{"inputs":[{"internalType":"bytes32","name":"_slot","type":"bytes32"},{"internalType":"bytes32","name":"_value","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"setBytes32"},{"inputs":[{"internalType":"bytes32","name":"_slot","type":"bytes32"},{"internalType":"uint256","name":"_value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"setUint"},{"inputs":[],"stateMutability":"view","type":"function","name":"version","outputs":[{"internalType":"string","name":"","type":"string"}]}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{"getAddress(bytes32)":{"notice":"Retrieves an address value from `_slot`."},"getBool(bytes32)":{"notice":"Retrieves a bool value from `_slot`."},"getBytes32(bytes32)":{"notice":"Retrieves a bytes32 value from `_slot`."},"getUint(bytes32)":{"notice":"Retrieves a uint256 value from `_slot`."},"setAddress(bytes32,address)":{"notice":"Stores an address `_value` at `_slot`."},"setBool(bytes32,bool)":{"notice":"Stores a bool `_value` at `_slot`."},"setBytes32((bytes32,bytes32)[])":{"notice":"Stores a bytes32 value at each key in `_slots`."},"setBytes32(bytes32,bytes32)":{"notice":"Stores a bytes32 `_value` at `_slot`. Any storage slots that         are packed should be set through this interface."},"setUint(bytes32,uint256)":{"notice":"Stores a uint256 `_value` at `_slot`."},"version()":{"notice":"Semantic version."}},"version":1}},"settings":{"remappings":["@cwia/=lib/clones-with-immutable-args/src/","@lib-keccak/=lib/lib-keccak/contracts/lib/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@rari-capital/solmate/=lib/solmate/","@solady-test/=lib/lib-keccak/lib/solady/test/","@solady/=lib/lib-keccak/lib/solady/src/","clones-with-immutable-args/=lib/clones-with-immutable-args/src/","ds-test/=lib/forge-std/lib/ds-test/src/","forge-std/=lib/forge-std/src/","kontrol-cheatcodes/=lib/kontrol-cheatcodes/src/","lib-keccak/=lib/lib-keccak/contracts/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","safe-contracts/=lib/safe-contracts/contracts/","solady/=lib/solady/src/","solmate/=lib/solmate/src/"],"optimizer":{"enabled":true,"runs":999999},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"src/universal/StorageSetter.sol":"StorageSetter"},"evmVersion":"london","libraries":{}},"sources":{"src/libraries/Storage.sol":{"keccak256":"0x7ce27a05552aa69afa6b2ab6684dfe99f27366cf8ef2046baeb1fb62fff0022f","urls":["bzz-raw://a6a24f3ed56681720707a5ab0372fd67fcb1a4f6fb072c7140cda28bdb70f269","dweb:/ipfs/QmW9uTpUULV4xmP7A7MoBDeDhVfQgmJG5qVUFGtXxWpWWK"],"license":"MIT"},"src/universal/ISemver.sol":{"keccak256":"0xba34562a8026f59886d2e07d1d58d90b9691d00e0788c6263cef6c22740cab44","urls":["bzz-raw://0826f998632f83c103c3085bf2e872db79a69022b6d2e0444c83a64ca5283c2a","dweb:/ipfs/QmcJ7PNqkAfKqbjFGRordtAg1v9DvcBSKvdTkVvciLyvQR"],"license":"MIT"},"src/universal/StorageSetter.sol":{"keccak256":"0x6fd8feff6ed9a3a20ed599c2b838b79f424f66ad2f3b618f4d1aebf9a867491b","urls":["bzz-raw://0df55fd09a8a9cf4e55e188fff90d623606898c123b8e21d809f206c2328455f","dweb:/ipfs/QmZWzbfkUYAxfN5eRtEpPjr6WcK86ZjsiJ8PVm7bULByPu"],"license":"MIT"}},"version":1},"storageLayout":{"storage":[],"types":{}},"userdoc":{"version":1,"kind":"user","methods":{"getAddress(bytes32)":{"notice":"Retrieves an address value from `_slot`."},"getBool(bytes32)":{"notice":"Retrieves a bool value from `_slot`."},"getBytes32(bytes32)":{"notice":"Retrieves a bytes32 value from `_slot`."},"getUint(bytes32)":{"notice":"Retrieves a uint256 value from `_slot`."},"setAddress(bytes32,address)":{"notice":"Stores an address `_value` at `_slot`."},"setBool(bytes32,bool)":{"notice":"Stores a bool `_value` at `_slot`."},"setBytes32((bytes32,bytes32)[])":{"notice":"Stores a bytes32 value at each key in `_slots`."},"setBytes32(bytes32,bytes32)":{"notice":"Stores a bytes32 `_value` at `_slot`. Any storage slots that         are packed should be set through this interface."},"setUint(bytes32,uint256)":{"notice":"Stores a uint256 `_value` at `_slot`."},"version()":{"notice":"Semantic version."}},"notice":"A simple contract that allows setting arbitrary storage slots.         WARNING: this contract is not safe to be called by untrusted parties.         It is only meant as an intermediate step during upgrades."},"devdoc":{"version":1,"kind":"dev","title":"StorageSetter"},"id":179}